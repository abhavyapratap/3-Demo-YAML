trigger:
- none
 
pool:
  DevOps-Poool
 
variables: 
  workingDirectory: 'environment/dev'
 
parameters:
- name: runInit
  type: boolean
  default: true
 
- name: runValidate
  type: boolean
  default: false
 
- name: runPlan
  type: boolean
  default: false
 
- name: runApply
  type: boolean
  default: true
 
steps:
- task: TerraformInstaller@1
  displayName: Terraform Installer
  inputs: 
    terraformVersion: latest

# Terraform Init
- ${{ if parameters.runInit }}:
  - task: TerraformTask@5
    displayName: Terraform Init
    inputs:
      provider: 'azurerm'
      command: 'init'
      workingDirectory: "$(workingDirectory)"
      backendServiceArm: 'Service Connection'
      backendAzureRmResourceGroupName: 'rg-bhavya'
      backendAzureRmStorageAccountName: 'bhavyastorageacc'
      backendAzureRmContainerName: 'bhavyacontainer'
      backendAzureRmKey: 'bhavya.tfstate'

# Terraform Validate
- ${{ if parameters.runValidate }}:
  - task: TerraformTask@5
    displayName: Terraform Validate
    inputs:
      provider: 'azurerm'
      command: 'validate'
      workingDirectory: "$(workingDirectory)"

# Terraform Plan
- ${{ if parameters.runPlan }}:
  - task: TerraformTask@5
    displayName: Terraform Plan
    inputs:
      provider: 'azurerm'
      command: 'plan'
      workingDirectory: "$(workingDirectory)"
      environmentServiceNameAzureRM: 'Service Connection'

# Terraform Apply
- ${{ if parameters.runApply }}:
  - task: TerraformTask@5
    displayName: Terraform Apply
    inputs:
      provider: 'azurerm'
      command: 'apply'
      workingDirectory: "$(workingDirectory)"
      environmentServiceNameAzureRM: 'Service Connection'
