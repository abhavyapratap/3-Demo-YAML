trigger:
- none
 
pool:
  DevOps-Poool
 
variables: 
  workingDirectory: 'environment/dev'
 
parameters:
- name: runInit
  type: boolean
  default: true
 
- name: runValidate
  type: boolean
  default: true
 
- name: runPlan
  type: boolean
  default: true
 
- name: runApply
  type: boolean
  default: false
 
steps:
- task: TerraformInstaller@1
  displayName: Terraform Installer
  inputs: 
    terraformVersion: latest
 
- task: TerraformTask@5
  displayName: Terraform Init
  condition: eq('${{ parameters.runInit }}', true)
  inputs:
    provider: 'azurerm'
    command: 'init'
    workingDirectory: "$(workingDirectory)"
    backendServiceArm: 'Service Connection'
    backendAzureRmResourceGroupName: 'rg-bhavya'
    backendAzureRmStorageAccountName: 'bhavyastorageacc'
    backendAzureRmContainerName: 'bhavyacontainer'
    backendAzureRmKey: 'bhavya.tfstate'
  
- task: TerraformTask@5
  displayName: Terraform Validate
  condition: eq('${{ parameters.runValidate }}', true)
  inputs:
    provider: 'azurerm'
    command: 'validate'
    workingDirectory: "$(workingDirectory)"
 
- task: TerraformTask@5
  displayName: Terraform Plan
  condition: eq('${{ parameters.runPlan }}', true)
  inputs:
    provider: 'azurerm'
    command: 'plan'
    workingDirectory: "$(workingDirectory)"
    environmentServiceNameAzureRM: 'Service Connection'
 
- task: TerraformTask@5
  displayName: Terraform Apply
  condition: eq('${{ parameters.runApply }}', true)
  inputs:
    provider: 'azurerm'
    command: 'apply'
    workingDirectory: "$(workingDirectory)"
    environmentServiceNameAzureRM: 'Service Connection'